# -*- coding: utf-8 -*-
"""LogisticRegression_Final_usingLibrary.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Hf_iMupVC541yz_DVutgKiEhOu70JhJb
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import collections
import statistics

from sklearn.model_selection import KFold
from sklearn import preprocessing
from sklearn.model_selection import cross_val_score
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split

def logistic_Regression_library():
    dataset = pd.read_csv('../Data/PCA_Features.csv')



    X = dataset.iloc[:,0:-1]
    y = dataset.iloc[:,-1]



    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)
    log_reg=LogisticRegression(solver='lbfgs', class_weight='balanced', max_iter=10000)
    kf=KFold(n_splits=10)
    y_pred = log_reg.fit(X_train, y_train).predict(X_test)

    accuracy_model_logistic=cross_val_score(log_reg,X_train,y_train,cv=kf)
    precision_model_logistic=cross_val_score(log_reg,X_train,y_train,cv=kf, scoring='precision')
    recall_model_logistic=cross_val_score(log_reg,X_train,y_train,cv=kf, scoring='recall')
    avgAccuracy_logisticc=statistics.mean(accuracy_model_logistic)
    avgPrecision_logisticc=statistics.mean(precision_model_logistic)
    avgRecall_logisticc=statistics.mean(recall_model_logistic)

    print("Accuracy :" ,avgAccuracy_logisticc*100 ," %")
    print("Precision :" ,avgPrecision_logisticc*100, " %")
    print("Recall :",avgRecall_logisticc*100, " %")