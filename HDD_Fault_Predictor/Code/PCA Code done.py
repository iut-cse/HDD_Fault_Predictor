# -*- coding: utf-8 -*-
"""ML_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s20tIF-holM3I8rxWmyFTjTeYH-Iggmr
"""

import numpy as np
import pandas as pd

strr = '/content/drive/My Drive/final/Final.csv'
df = pd.read_csv(strr, delimiter=",", encoding="latin1")

del df['serial_number']
del df['Unnamed: 0']
df

mapping = {
    'A': 1,
    'B': 2,
    'C': 3,
    'D': 4,
    'E': 5,
    'F': 6,
    'G': 7,
    'H': 8,
    'I': 9,
    'J': 10,
    'K': 11,
    'L': 12,
    'M': 13,
    'N': 14,
    'O': 15,
    'P': 16,
    'Q': 17,
    'R': 18,
    'S': 19,
    'T': 20,
    'U': 21,
    'V': 22,
    'W': 23,
    'X': 24,
    'Y': 25,
    'Z': 26
}

df = df.replace({
    "manufacturer": mapping,
})

X = df.iloc[:,0:-1]
y = df.iloc[:,-1]

X

#mean normalization

from sklearn import preprocessing

X = X.astype(int)

X = (X-X.mean())/(X.max()-X.min())

# ****
# Deleting manufacturer as that feature has only one class which will not work with PCA. 
# But don't do this later on if the dataset has multiple Manufacturers.
# ****

del X['manufacturer']

transpose_data = X.T

matrix = np.cov(transpose_data)
print(matrix)

eigen_val, eigen_vec = np.linalg.eig(matrix)
print((eigen_vec))

diction = {}
for key, value in zip(eigen_val, eigen_vec):
  diction[key] = value

#sorting by eigenvalue

d = sorted(diction.items(), key=lambda item: item[0], reverse=True)

list_of_PCA = []

for i,j in d:
  list_of_PCA.append(j)

print(list_of_PCA)

